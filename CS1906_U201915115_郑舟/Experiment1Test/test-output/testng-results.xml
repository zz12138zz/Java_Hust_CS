<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-19T03:08:52Z" name="All Test Suite" finished-at="2021-05-19T03:08:54Z" duration-ms="1364">
    <groups>
    </groups>
    <test started-at="2021-05-19T03:08:52Z" name="./test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2021-05-19T03:08:52Z" duration-ms="26">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@6e75aa0d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@7fc229ab]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testGetContent" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testSetContent" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testTestToString" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@4387b79e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@4f638935]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testWriteObject" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-19T03:08:52Z" name="testReadObject" data-provider="testTerm" finished-at="2021-05-19T03:08:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2021-05-19T03:08:52Z" name="./test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2021-05-19T03:08:52Z" duration-ms="6">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1fe20588]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@77167fb7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-19T03:08:52Z" name="testTestToString" data-provider="testTermTuple" finished-at="2021-05-19T03:08:52Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<Search freq:1 position100>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6973bf95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@6ce139a4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2021-05-19T03:08:52Z" name="./test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="15">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-19T03:08:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@60d8c9b7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7adda9cc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7c0c77c7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:52Z" name="testTestToString" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@433d61fb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5cee5251]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:52Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-19T03:08:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@48aaecc3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testGetDocId" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testGetFreq" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testSetDocId" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:20 Frequency:0 positions:[])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testGetPositions" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testSetFreq" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:0 Frequency:8 positions:[])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testSetPositions" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:0 Frequency:0 positions:[100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testWriteObject" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testSort" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testCompareTo" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3967e60c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-19T03:08:53Z" name="testReadObject" data-provider="testPosting" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="12">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testAdd" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3ba9ad43]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testGet" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@48e4374]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testTestAdd" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(DocId:1 Frequency:4 positions:[1, 2, 3, 4]), (DocId:1 Frequency:4 positions:[1, 2, 3, 4]), (DocId:2 Frequency:2 positions:[5, 6])]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testTestToString" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@61230f6a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testIndexOf" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3d680b5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3c419631]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testRemove" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4b5d6a01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testTestRemove" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@418e7838]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testContains" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@49d904ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testClear" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testSort" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:2 Frequency:4 positions:[5, 7, 8, 9])->(DocId:3 Frequency:2 positions:[10, 11])->(DocId:4 Frequency:4 positions:[1, 2, 3, 4])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@4a22f9e2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testWriteObject" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:53Z" name="testReadObject" data-provider="testPostingList" finished-at="2021-05-19T03:08:53Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(DocId:1 Frequency:4 positions:[1, 2, 3, 4])->(DocId:2 Frequency:2 positions:[5, 6])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testGetTuples" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
<bbb freq:1 position30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position17>, <bbb freq:1 position30>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testSetDocPath" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathC:/2.txt
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testGetDocPath" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testGetDocId" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testSetDocId" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:2 docPathnull
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testGetTuple" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
<bbb freq:1 position30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position17>, <bbb freq:1 position30>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testTestToString" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
<bbb freq:1 position30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5a63f509]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testContains" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
<bbb freq:1 position30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<aaa freq:1 position17>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
<bbb freq:1 position30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testContains" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
<bbb freq:1 position30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<bbb freq:1 position30>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-19T03:08:53Z" name="testAddTuple" data-provider="testDocument" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPathC:/1.txt
<aaa freq:1 position17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<aaa freq:1 position17>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="18">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@5d11346a]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@13e39c73]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position0>, <bbb freq:1 position1>, <ccc freq:1 position2>, <ddd freq:1 position3>, <is freq:1 position4>, <f17 freq:1 position5>, <2020 freq:1 position6>, <ab freq:1 position7>, <ababababababababababab freq:1 position8>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@5d11346a]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@64cd705f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity freq:1 position0>, <destination freq:1 position1>, <emergency freq:1 position2>, <26% freq:1 position3>, <u571 freq:1 position4>, <because freq:1 position5>, <hence freq:1 position6>, <capital freq:1 position7>, <i freq:1 position8>, <frozen freq:1 position9>, <benefits freq:1 position10>, <google freq:1 position11>, <hahahahahahahahahahahahah freq:1 position12>, <ha freq:1 position13>, <frozen freq:1 position14>, <google freq:1 position15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@30ee2816]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity freq:1 position0>, <destination freq:1 position1>, <emergency freq:1 position2>, <26% freq:1 position3>, <u571 freq:1 position4>, <capital freq:1 position7>, <frozen freq:1 position9>, <benefits freq:1 position10>, <google freq:1 position11>, <hahahahahahahahahahahahah freq:1 position12>, <ha freq:1 position13>, <frozen freq:1 position14>, <google freq:1 position15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@c267ef4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position0>, <bbb freq:1 position1>, <ccc freq:1 position3>, <ddd freq:1 position4>, <f17 freq:1 position6>, <2020 freq:1 position7>, <ab freq:1 position8>, <ababababababababababab freq:1 position10>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@21de60b4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position0>, <bbb freq:1 position1>, <ccc freq:1 position2>, <ddd freq:1 position3>, <f17 freq:1 position4>, <2020 freq:1 position5>, <ab freq:1 position6>, <ababababababababababab freq:1 position7>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="4">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1f021e6c]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@7a69b07]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position0>, <bbb freq:1 position2>, <ab freq:1 position3>, <ccc freq:1 position4>, <ddd freq:1 position5>, <ababababababababababab freq:1 position7>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1f021e6c]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@5e82df6a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity freq:1 position0>, <destination freq:1 position1>, <emergency freq:1 position2>, <because freq:1 position5>, <hence freq:1 position6>, <capital freq:1 position7>, <i freq:1 position8>, <frozen freq:1 position9>, <benefits freq:1 position10>, <google freq:1 position11>, <hahahahahahahahahahahahah freq:1 position12>, <ha freq:1 position13>, <frozen freq:1 position14>, <google freq:1 position15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@16022d9d]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@31368b99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity freq:1 position0>, <destination freq:1 position1>, <emergency freq:1 position2>, <26% freq:1 position3>, <u571 freq:1 position4>, <because freq:1 position5>, <hence freq:1 position6>, <capital freq:1 position7>, <frozen freq:1 position9>, <benefits freq:1 position10>, <google freq:1 position11>, <frozen freq:1 position14>, <google freq:1 position15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@16022d9d]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@50b472aa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position0>, <bbb freq:1 position1>, <ccc freq:1 position3>, <ddd freq:1 position4>, <f17 freq:1 position5>, <2020 freq:1 position6>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4b53f538]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-19T03:08:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@41e36e46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa freq:1 position1>, <bbb freq:1 position2>, <ccc freq:1 position4>, <ddd freq:1 position6>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4b53f538]" started-at="2021-05-19T03:08:53Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@15c43bd9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity freq:1 position0>, <destination freq:1 position1>, <emergency freq:1 position2>, <capital freq:1 position7>, <frozen freq:1 position9>, <benefits freq:1 position10>, <google freq:1 position11>, <frozen freq:1 position14>, <google freq:1 position15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="508">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-19T03:08:53Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-19T03:08:53Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathD:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<26% freq:1 position3>
<u571 freq:1 position4>
<because freq:1 position5>
<hence freq:1 position6>
<capital freq:1 position7>
<i freq:1 position8>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<hahahahahahahahahahahahah freq:1 position12>
<ha freq:1 position13>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<26% freq:1 position3>
<u571 freq:1 position4>
<because freq:1 position5>
<hence freq:1 position6>
<capital freq:1 position7>
<i freq:1 position8>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<hahahahahahahahahahahahah freq:1 position12>
<ha freq:1 position13>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-19T03:08:53Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathD:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<26% freq:1 position3>
<u571 freq:1 position4>
<because freq:1 position5>
<hence freq:1 position6>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<26% freq:1 position3>
<u571 freq:1 position4>
<because freq:1 position5>
<hence freq:1 position6>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-19T03:08:53Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathD:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<because freq:1 position5>
<hence freq:1 position6>
<capital freq:1 position7>
<i freq:1 position8>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<hahahahahahahahahahahahah freq:1 position12>
<ha freq:1 position13>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<because freq:1 position5>
<hence freq:1 position6>
<capital freq:1 position7>
<i freq:1 position8>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<hahahahahahahahahahahahah freq:1 position12>
<ha freq:1 position13>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-19T03:08:53Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathD:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<26% freq:1 position3>
<u571 freq:1 position4>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<hahahahahahahahahahahahah freq:1 position12>
<ha freq:1 position13>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<26% freq:1 position3>
<u571 freq:1 position4>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<hahahahahahahahahahahahah freq:1 position12>
<ha freq:1 position13>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-19T03:08:53Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathD:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-19T03:08:53Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathD:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-19T03:08:53Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPathD:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2021-05-19T03:08:53Z" name="./test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2021-05-19T03:08:53Z" duration-ms="328">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testTestToString" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@66fdec9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testAddDocument" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@604c5de8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:1 docPathD:\IdeaWorkspace\SeachEngine/text/2.txt
<activity freq:1 position0>
<destination freq:1 position1>
<emergency freq:1 position2>
<capital freq:1 position7>
<frozen freq:1 position9>
<benefits freq:1 position10>
<google freq:1 position11>
<frozen freq:1 position14>
<google freq:1 position15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testLoad" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testSave" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testSearch" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testGetDictionary" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testWriteObject" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testReadObject" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/workfile/Java/JavaEx1/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testOptimize" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-19T03:08:53Z" name="testGetDocName" data-provider="testIndex" finished-at="2021-05-19T03:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@37091312]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2021-05-19T03:08:54Z" name="./test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2021-05-19T03:08:54Z" duration-ms="45">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@7f416310]" started-at="2021-05-19T03:08:54Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity-->(DocId:0 Frequency:3 positions:[0, 1, 6])->(DocId:1 Frequency:1 positions:[0])
benefits-->(DocId:0 Frequency:2 positions:[2, 7])->(DocId:1 Frequency:1 positions:[10])
capital-->(DocId:0 Frequency:2 positions:[3, 8])->(DocId:1 Frequency:1 positions:[7])
destination-->(DocId:0 Frequency:2 positions:[4, 9])->(DocId:1 Frequency:1 positions:[1])
emergency-->(DocId:0 Frequency:1 positions:[10])->(DocId:1 Frequency:1 positions:[2])
fizzy-->(DocId:0 Frequency:1 positions:[5])
frozen-->(DocId:1 Frequency:2 positions:[9, 14])
google-->(DocId:1 Frequency:2 positions:[11, 15])
marketplace-->(DocId:2 Frequency:1 positions:[0])
medical-->(DocId:2 Frequency:1 positions:[1])
notification-->(DocId:2 Frequency:1 positions:[3])
peninsula-->(DocId:2 Frequency:1 positions:[5])
pollution-->(DocId:2 Frequency:1 positions:[7])
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2021-05-19T03:08:54Z" name="./test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2021-05-19T03:08:54Z" duration-ms="84">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMap:
{activity=(DocId:1 Frequency:1 positions:[0])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMap:
{activity=(DocId:1 Frequency:1 positions:[0])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMap:
{activity=(DocId:1 Frequency:1 positions:[0])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:new content2
score:-1.0
TermPostingMap:
{activity=(DocId:1 Frequency:1 positions:[0])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:new content1
score:-3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMap:
{activity=(DocId:1 Frequency:1 positions:[0])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:1.0
TermPostingMap:
{activity=(DocId:1 Frequency:1 positions:[0])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:1
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score:-1.0
TermPostingMap:
{activity=(DocId:1 Frequency:1 positions:[0])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testTestToString" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
-----------------
docId:0
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score:-3.0
TermPostingMap:
{activity=(DocId:0 Frequency:3 positions:[0, 1, 6])}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2ceb80a1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-19T03:08:54Z" name="testCompareTo" data-provider="testHit" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@2b0f373b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2021-05-19T03:08:54Z" name="./test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2021-05-19T03:08:54Z" duration-ms="103">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-19T03:08:52Z" name="beforeSuite" finished-at="2021-05-19T03:08:52Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-19T03:08:54Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@16746061]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@57fd91c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-19T03:08:54Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-19T03:08:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@6cfcd46d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@52045dbe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-19T03:08:54Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2021-05-19T03:08:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@674658f7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@5c8eee0f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
